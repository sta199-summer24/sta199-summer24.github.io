---
title: "Grammar of graphics"
subtitle: "Lecture 2"
date: "January 18, 2024"
format: revealjs
---

# Warm up

```{r}
#| echo: false

library(countdown)
```

## While you wait...

**Questions from the prepare materials?**

```{=html}
<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/STA199S24?from=status-bar?" width="100%"></iframe>
```
## Announcements

-   Lab 1 on Monday â€“ go to your assigned lab
-   Catch up with the prepare materials

## From the survey {.smaller}

-   Almost half of the class mentioned being nervous about coding â€“ you're not alone!
    ðŸ’™

-   A good number of students mentioned being nervous about being new to stats + data science â€“ you're also not alone!
    ðŸ’œ

-   Visibility of text on slides: Cranked up font size!
    ðŸ’›

-   About exams: No coding on the in class (time-limited) exam + there will be practice exams

-   About teams: Peer evaluations + milestones throughout semester

-   Grading criteria: Scale of 0-4 for each exercise on lab + more details in lab instructions

-   Hardware: Code running on university containers

# Toolkit: Version control and collaboration

## Git and GitHub {.smaller}

::: columns
::: {.column width="50%"}
![](images/git-logo.png){fig-alt="Git logo" fig-align="center" width="150"}

-   Git is a version control system -- like "Track Changes" features from Microsoft Word, on steroids
-   It's not the only version control system, but it's a very popular one
:::

::: {.column width="50%"}
![](images/github-logo.png){fig-alt="GitHub logo" fig-align="center" width="150"}

-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better

-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)
:::
:::

## Versioning - done badly

![](images/phd_comics_vc.gif){fig-align="center"}

## Versioning - done better

![](images/lego-steps.png){fig-align="center"}

## Versioning - done even better

### with human readable messages

![](images/lego-steps-commit-messages.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-01.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-02.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-03.png){fig-align="center"}

## How will we use Git and GitHub?

![](images/whole-game-04.png){fig-align="center"}

## Git and GitHub tips {.smaller}

::: incremental
-   There are millions of git commands -- ok, that's an exaggeration, but there are a lot of them -- and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.
-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line -- skip that and move on to the next resource unless you feel comfortable trying it out.
-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.
:::

## Tour: Git + GitHub

::: demo
**Just one option for now:**

Sit back and enjoy the show!
:::

# Data visualization

## Examining data visualization {.smaller}

::: columns
::: {.column width="60%"}
Discuss the following for the visualization.

```{=html}
<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/STA199S24?from=status-bar?" width="100%"></iframe>
```
```{r}
#| echo: false

countdown(minutes = 4, left = 0, color_text = "#325b74")
```
:::

::: {.column width="40%"}
![Source: [Twitter](https://twitter.com/reina_sabah/status/1291509085855260672)](images/female-heights.png){fig-align="center"}
:::
:::

## `ae-02-bechdel-dataviz` {.smaller}

::: appex
-   Go to the course [GitHub org](https://github.com/sta199-f22-1) and find your `ae` repo (repo name will be suffixed with your GitHub name).
-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.
-   Render, commit, and push your edits by the AE deadline (end of this week)
:::

## Recap of AE {.smaller}

-   Construct plots with `ggplot()`.
-   Layers of ggplots are separated by `+`s.
-   The formula is (almost) always as follows:

```{r}
#| eval: false

ggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +
  geom_XXX()
```

-   Aesthetic attributes of a geometries (color, size, transparency, etc.) can be **map**ped to variables in the data or **set** by the user, e.g. `color = binary` vs. `color = "pink"`.
-   Use `facet_wrap()` when faceting (creating small multiples) by one variable and `facet_grid()` when faceting by two variables.
