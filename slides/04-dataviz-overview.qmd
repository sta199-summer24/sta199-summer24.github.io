## Announcements {.smaller} - Lab 1 due Thursday evening at 11:59 PM on Gradescope. - Recall, we have a no late work policy! Please don't wait until 11:55 PM to try to submit your work to Gradescope. - AEs this week should be submitted by midnight on Sunday. To "submit", commit and push at least once to your `ae` repo for each application exercise this week. - [📘 ms - chp 5](https://openintro-ims2.netlify.app/05-explore-numerical) is particularly useful for Lab 1. - AE 2 solutions posted. ## Questions {.smaller} - How detailed should my notes be when doing the preparation reading? - How to fix: code/text cut off when Rendering to PDF. - Useful function: View() function. # Visualizing various types of data ## Identifying variable types {.smaller} Identify the type of each of the following variables. - Favorite food - Number of classes you’re taking this semester - Zip code - Age ## The way data is displayed matters ::: poll What do these three plots show? ::: ![](images/bar-plot-meme.png){fig-align="center"} ::: aside Source: [#barbarplots](https://cogtales.wordpress.com/2016/06/06/congratulations-barbarplots/) ::: ## Visualizing `penguins` {.smaller} ::: columns ::: {.column width="70%"} ::: {style="font-size: 20px;"} ```{r,echo=TRUE} library(tidyverse) library(palmerpenguins) library(ggthemes) penguins ``` ::: ::: ::: {.column width="30%"} ![](images/penguins.png){fig-align="center"} ::: ::: ::: aside Artwork by \@allison_horst. ::: # Univariate analysis ## Univariate analysis Analyzing a single variable: - Numerical: histogram, box plot, density plot, etc. - Categorical: bar plot, pie chart, etc. ## Histogram - Step 1 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-hist-1 #| fig-show: hide #| echo: true ggplot( penguins ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-hist-1 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Histogram - Step 2 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-hist-2 #| fig-show: hide #| echo: true #| code-line-numbers: "3" ggplot( penguins, aes(x = body_mass_g) ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-hist-2 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Histogram - Step 3 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-hist-3 #| fig-show: hide #| echo: true #| code-line-numbers: "5" ggplot( penguins, aes(x = body_mass_g) ) + geom_histogram() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-hist-3 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Histogram - Step 4 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-hist-4 #| fig-show: hide #| echo: true #| code-line-numbers: "6" ggplot( penguins, aes(x = body_mass_g) ) + geom_histogram( binwidth=250 ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-hist-4 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Histogram - Step 5 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-hist-5 #| fig-show: hide #| echo: true #| code-line-numbers: "8-12" ggplot( penguins, aes(x = body_mass_g) ) + geom_histogram( binwidth=250 ) + labs( title="Weights of penguins", x="Weight (grams)", y="Count" ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-hist-5 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Boxplot - Step 1 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-box-1 #| fig-show: hide #| echo: true ggplot( penguins ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-box-1 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Boxplot - Step 2 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-box-2 #| fig-show: hide #| echo: true #| code-line-numbers: "3" ggplot( penguins, aes(x = body_mass_g) ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-box-2 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Boxplot - Step 3 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-box-3 #| fig-show: hide #| echo: true #| code-line-numbers: "5" ggplot( penguins, aes(y = body_mass_g) ) + geom_boxplot() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-box-3 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Boxplot - Step 4 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-box-4 #| fig-show: hide #| echo: true #| code-line-numbers: "3" ggplot( penguins, aes(x = body_mass_g) ) + geom_boxplot() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-box-4 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Boxplot - Step 5 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-box-5 #| fig-show: hide #| echo: true #| code-line-numbers: "6-9" ggplot( penguins, aes(x = body_mass_g) ) + geom_boxplot() + labs( x="Weight (grams)", y=NULL ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-box-5 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 1 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-1 #| fig-show: hide #| echo: true ggplot( penguins ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-1 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 2 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-2 #| fig-show: hide #| echo: true #| code-line-numbers: "3" ggplot( penguins, aes(x = body_mass_g) ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-2 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 3 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-3 #| fig-show: hide #| echo: true #| code-line-numbers: "5" ggplot( penguins, aes(x = body_mass_g) ) + geom_density() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-3 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 4 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-4 #| fig-show: hide #| echo: true #| code-line-numbers: "6" ggplot( penguins, aes(x = body_mass_g) ) + geom_density( fill="darkslategray1" ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-4 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 5 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-5 #| fig-show: hide #| echo: true #| code-line-numbers: "7" ggplot( penguins, aes(x = body_mass_g) ) + geom_density( fill="darkslategray1", linewidth=2 ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-5 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 6 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-6 #| fig-show: hide #| echo: true #| code-line-numbers: "8" ggplot( penguins, aes(x = body_mass_g) ) + geom_density( fill="darkslategray1", linewidth=2, color="darkorchid3" ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-6 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plot - Step 7 ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-7 #| fig-show: hide #| echo: true #| code-line-numbers: "9" ggplot( penguins, aes(x = body_mass_g) ) + geom_density( fill="darkslategray1", linewidth=2, color="darkorchid3", alpha=0.5 ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-7 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Weights of penguins {.smaller} ::: panel-tabset ## Question ::: task ::: columns ::: {.column width="70%"} ```{r} #| ref.label: penguins-hist-5 #| fig-width: 6 #| fig.asp: 0.35 #| echo: false ``` ```{r} #| ref.label: penguins-box-3 #| fig-width: 6 #| fig.asp: 0.25 #| echo: false ``` ```{r} #| ref.label: penguins-density-7 #| fig-width: 6 #| fig.asp: 0.25 #| echo: false ``` ::: ::: {.column width="30%"} TRUE / FALSE - The distribution of penguin weights in this sample is left skewed. - The distribution of penguin weights in this sample is unimodal. ::: ::: # Bivariate analysis ## Bivariate analysis Analyzing the relationship between two variables: - Numerical + numerical: scatterplot - Numerical + categorical: side-by-side box plots, violin plots, etc. - Categorical + categorical: stacked bar plots - Using an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot ## Side-by-side box plots ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-side-by-side-box-1 #| fig-show: hide #| echo: true #| code-line-numbers: "|2|3-6|4|5|8" ggplot( penguins, aes( x=body_mass_g, y=species ) ) + geom_boxplot() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-side-by-side-box-1 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plots ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-color-1 #| fig-show: hide #| echo: true #| code-line-numbers: "|4|5|8" ggplot( penguins, aes( x=body_mass_g, color=species ) ) + geom_density() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-color-1 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plots ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-color-2 #| fig-show: hide #| echo: true #| code-line-numbers: "6" ggplot( penguins, aes( x=body_mass_g, color=species, fill=species ) ) + geom_density() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-color-2 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plots ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-color-3 #| fig-show: hide #| echo: true #| code-line-numbers: "10" ggplot( penguins, aes( x=body_mass_g, color=species, fill=species ) ) + geom_density( alpha=0.5 ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-color-3 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Density plots ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-density-color-4 #| fig-show: hide #| echo: true #| code-line-numbers: "12-14" ggplot( penguins, aes( x=body_mass_g, color=species, fill=species ) ) + geom_density( alpha=0.5 ) + theme( legend.position = "bottom" ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-density-color-4 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ```{r} #| echo: false library(countdown) library(waffle) library(ggthemes) library(tidyverse) ggplot2::theme_set(ggplot2::theme_gray(base_size = 16)) ``` ## Questions from Lab 1 {.smaller} **Many of the questions in Lab 1 are subjective. How does that work?** > identify at least one outlier ```{r} #| label: popdensity-boxplot-1 #| fig-width: 5 #| fig-height: 3 #| echo: false #| eval: true ggplot(midwest, aes(x = popdensity)) + geom_boxplot() + labs( title="Population densities of midwest counties", x="Population density" ) ``` ## Questions from Lab 1 {.smaller} **Many of the questions in Lab 1 are subjective. How does that work?** > identify at least one outlier ✅ ```{r} #| label: popdensity-boxplot-2 #| fig-width: 5 #| fig-height: 3 #| echo: false #| eval: true ggplot(midwest, aes(x = popdensity)) + geom_boxplot() + labs( title="Population densities of midwest counties", x="Population density" ) + annotate( "rect", xmin=3800, xmax=90000, ymin=-0.05, ymax=0.05, alpha=0.2, fill="green" ) ``` ## Questions from Lab 1 {.smaller} **Many of the questions in Lab 1 are subjective. How does that work?** > identify at least one outlier ❌ ```{r} #| label: popdensity-boxplot-3 #| fig-width: 5 #| fig-height: 3 #| echo: false #| eval: true ggplot(midwest, aes(x = popdensity)) + geom_boxplot() + labs( title = "Population densities of midwest counties", x = "Population density" ) + annotate( "rect", xmin = -50, xmax = 4300, ymin = -0.40, ymax = 0.40, alpha = 0.2, fill = "red" ) ``` # Mid-class recap ## Packages ```{r} library(palmerpenguins) library(tidyverse) library(ggthemes) ``` ## Bivariate analysis {.smaller} ::: panel-tabset ## Plot ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-box #| echo: false #| fig-width: 5 #| fig-asp: 0.8 # Side-by-side box plots ggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) + geom_boxplot(alpha = 0.5, show.legend = FALSE) + scale_fill_colorblind() + labs( x = "Body mass (grams)", y = "Species", title = "Side-by-side box plots" ) ``` ::: ::: {.column width="50%"} ```{r} #| label: penguins-density #| echo: false #| fig-width: 5 #| fig-asp: 0.8 # Density plots ggplot(penguins, aes(x = body_mass_g, fill = species)) + geom_density(alpha = 0.5) + theme(legend.position = "bottom") + scale_fill_colorblind() + labs( x = "Body mass (grams)", y = "Density", fill = "Species", title = "Density plots" ) ``` ::: ::: ## Code ```{r} #| ref.label: penguins-box #| fig-show: hide #| echo: true ``` ```{r} #| ref.label: penguins-density #| fig-show: hide #| echo: true ``` ::: ## Violin plots ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-violin-1 #| fig-show: hide #| code-line-numbers: "|4|5|8" ggplot( penguins, aes( x = species, y = body_mass_g ) ) + geom_violin() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-violin-1 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Multiple geoms ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-violin-2 #| fig-show: hide #| code-line-numbers: "9" ggplot( penguins, aes( x = species, y = body_mass_g ) ) + geom_violin() + geom_point() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-violin-2 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Multiple geoms ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-violin-3 #| fig-show: hide #| code-line-numbers: "9" ggplot( penguins, aes( x = species, y = body_mass_g ) ) + geom_violin() + geom_jitter() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-violin-3 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Multiple geoms + aesthetics ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-violin-4 #| fig-show: hide #| code-line-numbers: "5-6" ggplot( penguins, aes( x = species, y = body_mass_g, color = species ) ) + geom_violin() + geom_jitter() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-violin-4 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Multiple geoms + aesthetics ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-violin-5 #| fig-show: hide #| code-line-numbers: "11-13" ggplot( penguins, aes( x = species, y = body_mass_g, color = species ) ) + geom_violin() + geom_jitter() + theme( legend.position = "none" ) ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-violin-5 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: ## Multiple geoms + aesthetics {.smaller} ::: columns ::: {.column width="50%"} ```{r} #| label: penguins-violin-6 #| fig-show: hide #| code-line-numbers: "14" ggplot( penguins, aes( x = species, y = body_mass_g, color = species ) ) + geom_violin() + geom_jitter() + theme( legend.position = "none" ) + scale_color_colorblind() ``` ::: ::: {.column width="50%"} ```{r} #| ref.label: penguins-violin-6 #| echo: false #| fig-width: 5 #| fig-asp: 0.8 ``` ::: ::: # Multivariate analysis ## Bechdel {.smaller} Load the Bechdel test data with `read_csv()`: ```{r} #| label: load-bechdel #| message: false bechdel <- read_csv("https://sta199-s24.github.io/data/bechdel.csv") ``` . . . <br> View the column `names()` of the `bechdel` data: ```{r} #| label: names-bechdel names(bechdel) ``` ## ROI by test result {.smaller} ::: question What about this plot makes it difficult to evaluate how ROI varies by Bechdel test result? ::: ```{r} #| label: roi-test-binary-box #| fig-width: 8 #| fig-asp: 0.4 ggplot(bechdel, aes(x = roi, y=clean_test, color=binary)) + geom_boxplot() ``` ## Movies with high ROI {.smaller} ::: question What are the movies with highest ROI? ::: ```{r} bechdel |> filter(roi > 400) |> select(title, roi, budget_2013, gross_2013, year, clean_test) ``` ## ROI by test result {.smaller} ::: question **Zoom in:** What about this plot makes it difficult to evaluate how ROI varies by Bechdel test result? ::: ```{r} #| label: roi-test-binary-box-zoom #| fig-width: 8 #| fig-asp: 0.4 #| code-line-numbers: "|3" ggplot(bechdel, aes(x = roi, y = clean_test, color = binary)) + geom_boxplot() + coord_cartesian(xlim = c(0, 15)) ``` # Application exercise ## `ae-03-duke-forest` {.smaller} Go to the project navigator in RStudio (top right corner of your RStudio window) and open the project called `ae`. If there are any uncommitted files, commit them, and then click **Pull**. <br> When you're finished, don't forget to **stage** changes, **commit** with a message, and **push** to Github.