---
title: "Communicating data science results effectively"
subtitle: "Lecture 23"
date: "April 17, 2024"
format: 
  revealjs:
    footer: "[üîó sta199-s24.github.io](https://sta199-s24.github.io/) &nbsp;¬∑&nbsp; [‚ùì Ask on Ed](https://edstem.org/us/courses/50730)"
editor_options: 
  chunk_output_type: console
---

# Warm up

## While you wait for class to begin...

::: task
Any questions about the project?
:::

```{=html}
<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://app.wooclap.com/STA199S24?from=status-bar?" width="100%"></iframe>
```
## Announcements {.smaller}

-   My office hours this week: Office hours today 1:30 - 2:30 pm today

-   Remaining due dates:

    ::: incremental
    -   Project presentations next Monday in lab -- all team members must be present.

    -   Project write-up and final repo due 8 am Wed, April 24 (you get an extra day!) -- you will lose access to your repo at this time.

    -   Remaining application exercises due on the usual schedule.
    :::

## "Extra credit"

-   Put any additional time into your project, MUCH HIGHER return on investment than any extra credit I can offer

-   But...
    AEs in class on Thursday and next Tuesday will be just you checking in saying you're here.
    You'll get to practice pull, commit, render, push, but no real content needed.
    So that's two AEs you can get credit for simply by being here and doing no additional work than pull, commit (a tiny change), render, push during class.

## Project {.smaller}

-   Review peer evaluations left by your peers, implement updates as you see fit, close the issue once you review them.

-   Have a clear plan for who is doing what, open issues on your repo, and assign them to individuals who can then close the issues as they finish a task.

-   Schedule at least one team meting between today and your presentation to practice your presentation together.

::: task
Any project questions?
:::

# Effective communication

## Take A Sad Plot & Make It Better

![](images/sad-plot-to-better.gif)

::: aside
Source: [https://alison.netlify.app/rlm-sad-plot-better](alison.netlify.app/rlm-sad-plot-better)
:::

# Application exercise

## Application exercise: `ae-17-effective-dataviz` {.smaller}

::: appex
-   Go to your project called `ae`.
-   If there are any uncommitted files, commit them, and push. Then pull.
-   Work on `ae-17-effective-dataviz.qmd`.
:::

## Recap {.smaller}

::: incremental
-   Represent percentages as parts of a whole
-   Place variables representing time on the x-axis when possible
-   Pay attention to data types, e.g., represent time as time on a continuous scale, not years as levels of a categorical variable
-   Prefer direct labeling over legends
-   Use accessible colors
-   Use color to draw attention
-   Pick a purpose and label, color, annotate for that purpose
-   Communicate your main message directly in the plot labels
-   Simplify before you call it done (a.k.a. "Before you leave the house, look in the mirror and take one thing off")
:::
